import numpy as np
a = np.arrange(15),reshape(3,5)
a.shape   #(3,5) the dimensions of the array
a.ndim   #the number of dimensions in the array
a.dtype.name    #type of elements in array
a.itemsize   #the bytes of each elements in array 
a.size     #number of basic elements
type(a)   #type ndarray

np.zeros((2,3))
np.ones((2,3))
np.empty((2,3))
np.random.random((2,3))

np.arrange(0,2,0.3)
np.linspace(0,2,10)

np.zeros_like(a)
np.ones_like(a)
np.empty_like(a)

#display all the elements of matrix 
np.set_printoptions(threshold = np.nan)

#basic operations
a = ([20,30,40,50])
b = np.random(4)
a+b
a-b
a*b
b**2

A = np.arrange(4).reshape(2,2)
B = np.array([[4,3],[2,1]])
A * B    # multipy each element
A @ B    # matrix multipy
A.dot(B)  #the same as last one

A.sum()
A.max()
A.min()

A.sum(axis = 0)  #sum of each column
A.min(axis = 1)  #min of each row
A.cumsum(axis = 1)   #cumulative sum along each r

#universal functions
np.exp(A)
np.sqrt(A)
np.add(A,B)

a = np.arrange(10)**3
a[2:5]
a[:6:2]=1000  #set every 2nd element to -1000

def f(x,y)
  return 10*x + y
b = fromfunction(f,(5,4),dtype = int)
b[2,3]
b[0:5,1]
b[:,1]
b[1:3,:]
b[-1] #equal to b[-1,:]

#if x is an array with 5 axes
#x[1,2,...] is equivalent to x[1,2,:,:,:]
#x[...,3] to x[:,:,:,:,3]
#x[4,...,5,:] to x[4,:,:,5,:]

#iterating




